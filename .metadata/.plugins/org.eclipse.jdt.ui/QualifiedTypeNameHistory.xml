<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="com.alibaba.fastjson.JSONObject"/>
<fullyQualifiedTypeName name="com.alibaba.fastjson.PropertyNamingStrategy"/>
<fullyQualifiedTypeName name="com.fasterxml.jackson.databind.PropertyNamingStrategy"/>
<fullyQualifiedTypeName name="com.xnph66.boot.util.JsonUtil"/>
<fullyQualifiedTypeName name="org.springframework.boot.builder.SpringApplicationBuilder"/>
<fullyQualifiedTypeName name="com.xnph66.boot.commom.ConstantUtil"/>
<fullyQualifiedTypeName name="com.xnph66.Appliction"/>
<fullyQualifiedTypeName name="com.xnph66.service.CityService"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.ImportResource"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.PropertySource"/>
<fullyQualifiedTypeName name="com.alibaba.dubbo.config.annotation.Reference"/>
<fullyQualifiedTypeName name="com.xnph66.entity.City"/>
<fullyQualifiedTypeName name="com.xn.api.Appliction"/>
<fullyQualifiedTypeName name="com.xn.api.dubbo.entity.City"/>
<fullyQualifiedTypeName name="com.xn.api.dubbo.service.CityService"/>
<fullyQualifiedTypeName name="com.ly.dubbo.entity.City"/>
<fullyQualifiedTypeName name="com.alibaba.dubbo.config.annotation.Service"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.SpringBootApplication"/>
<fullyQualifiedTypeName name="org.springframework.boot.SpringApplication"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.EnableAutoConfiguration"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.apache.commons.logging.LogFactory"/>
<fullyQualifiedTypeName name="org.apache.commons.logging.Log"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
<fullyQualifiedTypeName name="javax.security.cert.X509Certificate"/>
<fullyQualifiedTypeName name="java.security.cert.X509Certificate"/>
<fullyQualifiedTypeName name="org.apache.http.ssl.TrustStrategy"/>
<fullyQualifiedTypeName name="com.sun.net.ssl.SSLContext"/>
<fullyQualifiedTypeName name="javax.net.ssl.SSLContext"/>
<fullyQualifiedTypeName name="org.apache.http.conn.ssl.SSLConnectionSocketFactory"/>
<fullyQualifiedTypeName name="org.apache.http.impl.client.HttpClients"/>
<fullyQualifiedTypeName name="org.apache.http.impl.client.CloseableHttpClient"/>
<fullyQualifiedTypeName name="org.apache.http.conn.ssl.TrustStrategy"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="org.springframework.http.client.ClientHttpRequestFactory"/>
<fullyQualifiedTypeName name="org.springframework.http.client.HttpComponentsClientHttpRequestFactory"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="javax.annotation.PostConstruct"/>
<fullyQualifiedTypeName name="javax.annotation.PreDestroy"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="java.io.Serializable"/>
</qualifiedTypeNameHistroy>
